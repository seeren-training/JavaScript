<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
  <head>
    <title>Chapitre 02: Les Op&#xE9;rateurs - Formation JavaScript Initiation</title>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <link rel="stylesheet" type="text/css" href="css/33d0c34f96e6afed4baa666fd7bfab67.css" media="all"/>
    <link rel="stylesheet" type="text/css" href="css/f786f0fa752fdc2603a99d15b85cb5fd.css" media="all and (orientation: portrait)"/>
  </head>
  <body>
    <div class="chapitre-content" id="ch_02">
      <h2>
        <span>Chapitre 02:</span>
        <a>Les Op&#xE9;rateurs</a>
      </h2>
      <div class="content-box">
        <strong>Nos premi&#xE8;res op&#xE9;rations</strong>
        <p>Les op&#xE9;rateurs permettent d'effectuer des op&#xE9;rations sur des valeurs ou des variables, il font partie des symboles int&#xE9;gr&#xE9;s au langage. Nous allons utiliser les diff&#xE9;rents types d'op&#xE9;rateurs que poss&#xE8;de JavaScript: les op&#xE9;rateurs d'affectation, arithm&#xE9;tiques, de comparaison, logiques, conditionnels et relationnels.</p>
      </div>
      <h3 id="c_02_affectation">Op&#xE9;rateurs d'affectation</h3>
      <div class="content-box">
        <h4>Affectation</h4>
        <p>Les op&#xE9;rateurs d'affectation affectent une valeur apr&#xE8;s avoir effectu&#xE9; un calcul, ils simplifient l'&#xE9;criture d'op&#xE9;rations. Ils r&#xE9;unissent l'op&#xE9;rateur = et les op&#xE9;rateurs arithm&#xE9;tiques, les op&#xE9;rateurs binaires peuvent aussi &#xEA;tres simplifi&#xE9;s par un op&#xE9;rateur d'affectation mais nous les aborderons plus tard.</p>
      </div>
      <div class="content-tab">
        <table>
          <tr>
            <th>Op&#xE9;ration</th>
            <th>Syntaxe</th>
            <th>Exemple</th>
          </tr>
          <tr>
            <td>Affectation</td>
            <td>=</td>
            <td>a = x</td>
          </tr>
          <tr>
            <td>Addition puis affectation</td>
            <td>+=</td>
            <td>a += x</td>
          </tr>
          <tr>
            <td>Soustraction puis affectation</td>
            <td>-=</td>
            <td>a -= x</td>
          </tr>
          <tr>
            <td>Multiplication puis affectation</td>
            <td>*=</td>
            <td>a *= x</td>
          </tr>
          <tr>
            <td>Division puis affectation</td>
            <td>/=</td>
            <td>a /= x</td>
          </tr>
          <tr>
            <td>Modulo puis affectation</td>
            <td>%=</td>
            <td>a %= x</td>
          </tr>
        </table>
      </div>
      <div class="content-code">
        <strong>Op&#xE9;rateurs d'affectation</strong>
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #ffcc00">var&#xA0;</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">=&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">;
<br/>
<br/></span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">+=&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">;
<br/></span><span style="color: #8c8c8c">//&#xA0;10
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);
<br/></span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">-=&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">;
<br/></span><span style="color: #8c8c8c">//&#xA0;5
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);
<br/></span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">*=&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">;
<br/></span><span style="color: #8c8c8c">//&#xA0;25
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);
<br/></span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">/=&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">;
<br/></span><span style="color: #8c8c8c">//&#xA0;5
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);
<br/></span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">%=&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">;
<br/></span><span style="color: #8c8c8c">//&#xA0;0
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <div class="content-tips">
        <h4>Conversion</h4>
        <p>Pendant une op&#xE9;ration JavaScript tente de convertir les valeurs si elles ne correspondent pas au type attendu. Dans le cas de l'op&#xE9;rateur += la conversion n'est pas effectu&#xE9;e quand il s'agit d'une chaine de caract&#xE8;res car l'op&#xE9;rateur + est aussi utilis&#xE9; pour la concat&#xE9;nation de chaines de caract&#xE8;res.</p>
      </div>
      <div class="content-code">
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #ffcc00">var&#xA0;</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">=&#xA0;</span><span style="color: #2aa198">"5"</span><span style="color: #ffcc00">;
<br/>
<br/></span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">+=&#xA0;</span><span style="color: #2aa198">"5"</span><span style="color: #ffcc00">;
<br/></span><span style="color: #8c8c8c">//&#xA0;55
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);
<br/></span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">-=&#xA0;</span><span style="color: #2aa198">"5"</span><span style="color: #ffcc00">;
<br/></span><span style="color: #8c8c8c">//&#xA0;50
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <h3 id="c_02_arithmetique">Op&#xE9;rateurs arithm&#xE9;tiques</h3>
      <div class="content-box">
        <h4>Arithm&#xE9;tiques</h4>
        <p>Les op&#xE9;rateurs arithm&#xE9;tiques effectuent une op&#xE9;ration entre deux op&#xE9;randes. Le type attendu des op&#xE9;randes est un nombre &#xE0; l&#x2019;exception du traitement des chaines de caract&#xE8;res par l'op&#xE9;rateur +.</p>
      </div>
      <div class="content-tab">
        <table>
          <tr>
            <th>Op&#xE9;ration</th>
            <th>Syntaxe</th>
            <th>Exemple</th>
          </tr>
          <tr>
            <td>Addition</td>
            <td>+</td>
            <td>a = a + x</td>
          </tr>
          <tr>
            <td>Soustraction</td>
            <td>-</td>
            <td>a = a - x</td>
          </tr>
          <tr>
            <td>Multiplication</td>
            <td>*</td>
            <td>a = a * x</td>
          </tr>
          <tr>
            <td>Division</td>
            <td>/</td>
            <td>a = a / x</td>
          </tr>
          <tr>
            <td>Modulo</td>
            <td>%</td>
            <td>a = a % x</td>
          </tr>
          <tr>
            <td>Incr&#xE9;ment pr&#xE9;fix&#xE9;</td>
            <td>++</td>
            <td>++a</td>
          </tr>
          <tr>
            <td>Incr&#xE9;ment suffix&#xE9;</td>
            <td>++</td>
            <td>a++</td>
          </tr>
          <tr>
            <td>D&#xE9;cr&#xE9;ment pr&#xE9;fix&#xE9;</td>
            <td>--</td>
            <td>--a</td>
          </tr>
          <tr>
            <td>D&#xE9;cr&#xE9;ment suffix&#xE9;</td>
            <td>--</td>
            <td>a--</td>
          </tr>
        </table>
      </div>
      <div class="content-code">
        <strong>Op&#xE9;rateurs arithm&#xE9;tiques</strong>
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #ffcc00">var&#xA0;</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">=&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">;
<br/>
<br/></span><span style="color: #8c8c8c">//&#xA0;10
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">+&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;0
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">-&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;25
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">*&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;1
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">/&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;0
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">%&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;6
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(++</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;6
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">++);
<br/></span><span style="color: #8c8c8c">//&#xA0;7
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;6
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(--</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;6
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">--);
<br/></span><span style="color: #8c8c8c">//&#xA0;5
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <div class="content-tips">
        <h4>Incr&#xE9;ment</h4>
        <p>L'incr&#xE9;ment convertira les types qui ne sont pas des nombres en nombre ayant comme valeur NaN. La chaine de caract&#xE8;res ne sera pas incr&#xE9;ment&#xE9;e dans l'ordre de valeur Unicode, seul le boolean, le null et le tableau seront convertis en nombres entiers ou d&#xE9;cimaux.</p>
      </div>
      <div class="content-code">
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #ffcc00">var&#xA0;</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">=&#xA0;</span><span style="color: #ffffff">null</span><span style="color: #ffcc00">;
<br/></span><span style="color: #8c8c8c">//&#xA0;1
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(++</span><span style="color: #ffffff">a</span><span style="color: #ffcc00">);
<br/>var&#xA0;</span><span style="color: #ffffff">b&#xA0;</span><span style="color: #ffcc00">=&#xA0;</span><span style="color: #ffffff">true</span><span style="color: #ffcc00">;
<br/></span><span style="color: #8c8c8c">//&#xA0;2
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(++</span><span style="color: #ffffff">b</span><span style="color: #ffcc00">);
<br/>var&#xA0;</span><span style="color: #ffffff">c&#xA0;</span><span style="color: #ffcc00">=&#xA0;[</span><span style="color: #ffffff">2</span><span style="color: #ffcc00">];
<br/></span><span style="color: #8c8c8c">//&#xA0;3
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(++</span><span style="color: #ffffff">c</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <h3 id="c_02_comparaison">Op&#xE9;rateurs de comparaison</h3>
      <div class="content-box">
        <h4>Comparaison</h4>
        <p>Les op&#xE9;rateurs de comparaison effectuent une comparaison portant sur la valeur ou sur le type et la valeur, soit une comparaison stricte. Ils renvoient un boolean, true si les &#xE9;l&#xE9;ments sont &#xE9;gaux pour la comparaison ou false s'ils ne le sont pas.</p>
      </div>
      <div class="content-tab">
        <table>
          <tr>
            <th>Op&#xE9;ration</th>
            <th>Syntaxe</th>
            <th>Exemple</th>
          </tr>
          <tr>
            <td>Sup&#xE9;rieur</td>
            <td>&gt;</td>
            <td>a &gt; x</td>
          </tr>
          <tr>
            <td>Sup&#xE9;rieur ou &#xE9;gal</td>
            <td>&gt;=</td>
            <td>a &gt;= x</td>
          </tr>
          <tr>
            <td>Inf&#xE9;rieur</td>
            <td>&lt;</td>
            <td>a &lt; x</td>
          </tr>
          <tr>
            <td>Inf&#xE9;rieur ou &#xE9;gal</td>
            <td>&lt;=</td>
            <td>a &lt;= x</td>
          </tr>
          <tr>
            <td>&#xC9;galit&#xE9;</td>
            <td>==</td>
            <td>a == x</td>
          </tr>
          <tr>
            <td>&#xC9;galit&#xE9; Stricte</td>
            <td>===</td>
            <td>a === x</td>
          </tr>
          <tr>
            <td>In&#xE9;galit&#xE9;</td>
            <td>!=</td>
            <td>a != x</td>
          </tr>
          <tr>
            <td>In&#xE9;galit&#xE9; stricte</td>
            <td>!==</td>
            <td>a !== x</td>
          </tr>
        </table>
      </div>
      <div class="content-code">
        <strong>Op&#xE9;rateurs de comparaison</strong>
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #ffcc00">var&#xA0;</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">=&#xA0;</span><span style="color: #ffffff">5</span><span style="color: #ffcc00">,
<br/>&#xA0;&#xA0;&#xA0;&#xA0;</span><span style="color: #ffffff">x&#xA0;</span><span style="color: #ffcc00">=&#xA0;</span><span style="color: #2aa198">"5"</span><span style="color: #ffcc00">;
<br/>
<br/></span><span style="color: #8c8c8c">//&#xA0;false
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">&gt;&#xA0;</span><span style="color: #ffffff">x</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">&gt;=&#xA0;</span><span style="color: #ffffff">x</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;false
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">&lt;&#xA0;</span><span style="color: #ffffff">x</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">&lt;=&#xA0;</span><span style="color: #ffffff">x</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">==&#xA0;</span><span style="color: #ffffff">x</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;false
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">===&#xA0;</span><span style="color: #ffffff">x</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;false
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">!=&#xA0;</span><span style="color: #ffffff">x</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">!==&#xA0;</span><span style="color: #ffffff">x</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <div class="content-tips">
        <h4>&#xC9;galit&#xE9;</h4>
        <p>Pour comparer une &#xE9;galit&#xE9; non stricte, les valeurs seront converties. Un type peut &#xEA;tre &#xE9;gal &#xE0; un autre type si sa valeur convertie lui est &#xE9;gale. False peut &#xEA;tre &#xE9;gal &#xE0; une chaine vide, &#xE0; une chaine qui contient 0, au nombre 0, &#xE0; un tableau vide ou &#xE0; un tableau contenant 0 en unique &#xE9;l&#xE9;ment.</p>
      </div>
      <div class="content-code">
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #ffcc00">var&#xA0;</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">=&#xA0;</span><span style="color: #ffffff">false</span><span style="color: #ffcc00">;
<br/>
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">==&#xA0;</span><span style="color: #2aa198">""</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">==&#xA0;</span><span style="color: #2aa198">"0"</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">==&#xA0;</span><span style="color: #ffffff">0</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">==&#xA0;[]);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">a&#xA0;</span><span style="color: #ffcc00">==&#xA0;[</span><span style="color: #ffffff">0</span><span style="color: #ffcc00">]);</span>
</span>
</code>
      </div>
      <h3 id="c_02_logique">Op&#xE9;rateurs logiques</h3>
      <div class="content-box">
        <h4>Logiques</h4>
        <p>Les op&#xE9;rateurs logiques en JavaScript ne renvoient pas uniquement des valeurs bool&#xE9;ennes contrairement &#xE0; d'autres langages.</p>
      </div>
      <div class="content-tab">
        <table>
          <tr>
            <th>Op&#xE9;ration</th>
            <th>Syntaxe</th>
            <th>Exemple</th>
          </tr>
          <tr>
            <td>Et</td>
            <td>&amp;&amp;</td>
            <td>a &amp;&amp; x</td>
          </tr>
          <tr>
            <td>Ou</td>
            <td>||</td>
            <td>a || x</td>
          </tr>
          <tr>
            <td>Non</td>
            <td>!</td>
            <td>!a</td>
          </tr>
        </table>
      </div>
      <div class="content-box">
        <strong>&amp;&amp;</strong>
        <p>Utilis&#xE9; avec des op&#xE9;randes boolean, l'op&#xE9;rateur &amp;&amp; renvoie true si les deux op&#xE9;randes valent true, sinon il renvoie false. Utilis&#xE9; avec des op&#xE9;randes non boolean l'op&#xE9;rateur renvoie la premi&#xE8;re op&#xE9;rande si elle peut &#xEA;tre convertie &#xE0; false, sinon il renvoie la deuxi&#xE8;me.</p>
      </div>
      <div class="content-code">
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">true&#xA0;</span><span style="color: #ffcc00">&amp;&amp;&#xA0;</span><span style="color: #ffffff">true</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;false
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">true&#xA0;</span><span style="color: #ffcc00">&amp;&amp;&#xA0;</span><span style="color: #ffffff">false</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;Hello
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">1&#xA0;</span><span style="color: #ffcc00">&amp;&amp;&#xA0;</span><span style="color: #2aa198">"Hello"</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;0
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">0&#xA0;</span><span style="color: #ffcc00">&amp;&amp;&#xA0;</span><span style="color: #2aa198">"Hello"</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <div class="content-box">
        <strong>||</strong>
        <p>Utilis&#xE9; avec des op&#xE9;randes boolean, l'op&#xE9;rateur || renvoie true si l'une des deux op&#xE9;randes vaut true, sinon il renvoie false. Utilis&#xE9; avec des op&#xE9;randes non boolean l'op&#xE9;rateur renvoie la premi&#xE8;re op&#xE9;rande si elle peut &#xEA;tre convertie &#xE0; true, sinon il renvoie la deuxi&#xE8;me.</p>
      </div>
      <div class="content-code">
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #8c8c8c">//&#xA0;false
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">false&#xA0;</span><span style="color: #ffcc00">||&#xA0;</span><span style="color: #ffffff">false</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">true&#xA0;</span><span style="color: #ffcc00">||&#xA0;</span><span style="color: #ffffff">false</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;1
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">1&#xA0;</span><span style="color: #ffcc00">||&#xA0;</span><span style="color: #2aa198">"Hello"</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;Hello
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">0&#xA0;</span><span style="color: #ffcc00">||&#xA0;</span><span style="color: #2aa198">"Hello"</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <div class="content-box">
        <strong>!</strong>
        <p>L'op&#xE9;rateur ! renvoie true si son op&#xE9;rande peut &#xEA;tre convertie &#xE0; false, sinon il renvoie true.</p>
      </div>
      <div class="content-code">
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(!</span><span style="color: #ffffff">false</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;false
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(!</span><span style="color: #ffffff">true</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(!</span><span style="color: #2aa198">""</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;false
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(!</span><span style="color: #ffffff">1</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(!</span><span style="color: #ffffff">0</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <div class="content-box">
        <h4>Binaires</h4>
        <p>Les op&#xE9;rateurs binaires comparent les valeurs binaires du nombre utilis&#xE9; en op&#xE9;randes et renvoie le r&#xE9;sultat sous forme de nombre.</p>
      </div>
      <div class="content-tab">
        <table>
          <tr>
            <th>Op&#xE9;ration</th>
            <th>Syntaxe</th>
            <th>Exemple</th>
          </tr>
          <tr>
            <td>Et</td>
            <td>&amp;</td>
            <td>a &amp; x</td>
          </tr>
          <tr>
            <td>Ou</td>
            <td>|</td>
            <td>a | x</td>
          </tr>
          <tr>
            <td>Ou exclusif</td>
            <td>^</td>
            <td>a ^ x</td>
          </tr>
          <tr>
            <td>D&#xE9;calage &#xE0; gauche</td>
            <td>&lt;&lt;</td>
            <td>a &lt;&lt; x</td>
          </tr>
          <tr>
            <td>D&#xE9;calage &#xE0; droite</td>
            <td>&gt;&gt;</td>
            <td>a &gt;&gt; x</td>
          </tr>
        </table>
      </div>
      <div class="content-tips">
        <h4>Bit &#xE0; bit</h4>
        <p>La conversion en binaire d'un nombre sur un ensemble de 32 bits n'est pas difficile. Chaque bit est repr&#xE9;sent&#xE9; par un 1 ou un 0, la repr&#xE9;sentation d'un nombre en binaire s'effectue de la droite vers la gauche dans l'ordre croissant soit, 128, 64, 32, 16, 8, 4, 2, 1 pour un ensemble de 8 bits. Dans cette logique le nombre 16 se traduit par 1 0 0 0 0, le nombre 15 se traduit par 1 1 1 1 ou encore le nombre 9 se traduit par 1 0 0 1.</p>
      </div>
      <div class="content-box">
        <strong>&amp;</strong>
        <p>L'op&#xE9;rateur binaire &amp; renvoie en nombre la valeur binaire correspondant aux bits repr&#xE9;sent&#xE9;s par un 1 qu'ont en commun les deux op&#xE9;randes.</p>
      </div>
      <div class="content-code">
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #8c8c8c">//&#xA0;0&#xA0;(0&#xA0;0&#xA0;0&#xA0;0&#xA0;0)
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">16&#xA0;</span><span style="color: #ffcc00">&amp;&#xA0;</span><span style="color: #ffffff">15</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;9&#xA0;(0&#xA0;1&#xA0;0&#xA0;0&#xA0;1)
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">15&#xA0;</span><span style="color: #ffcc00">&amp;&#xA0;</span><span style="color: #ffffff">9</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <div class="content-box">
        <strong>|</strong>
        <p>L'op&#xE9;rateur binaire | renvoie en nombre la valeur binaire correspondant aux bits repr&#xE9;sent&#xE9;s par un 1 que poss&#xE8;de l'un des deux op&#xE9;randes.</p>
      </div>
      <div class="content-code">
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #8c8c8c">//&#xA0;31&#xA0;(1&#xA0;1&#xA0;1&#xA0;1&#xA0;1)
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">16&#xA0;</span><span style="color: #ffcc00">|&#xA0;</span><span style="color: #ffffff">15</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;15&#xA0;(1&#xA0;1&#xA0;1&#xA0;1)
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">15&#xA0;</span><span style="color: #ffcc00">|&#xA0;</span><span style="color: #ffffff">9</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <div class="content-box">
        <strong>^</strong>
        <p>L'op&#xE9;rateur binaire ^ renvoie en nombre la valeur binaire correspondant aux bits repr&#xE9;sent&#xE9;s par un 1 que poss&#xE8;de exclusivement l'un des deux op&#xE9;randes.</p>
      </div>
      <div class="content-code">
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #8c8c8c">//&#xA0;31&#xA0;(1&#xA0;1&#xA0;1&#xA0;1&#xA0;1)
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">16&#xA0;</span><span style="color: #ffcc00">^&#xA0;</span><span style="color: #ffffff">15</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;6&#xA0;(1&#xA0;1&#xA0;0)
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">15&#xA0;</span><span style="color: #ffcc00">^&#xA0;</span><span style="color: #ffffff">9</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <div class="content-box">
        <strong>&lt;&lt; et &gt;&gt;</strong>
        <p>L'op&#xE9;rateur de d&#xE9;calage &#xE0; gauche ou &#xE0; droite d&#xE9;cale vers la gauche ou vers la droite le premier 1 rencontr&#xE9; de la distance pr&#xE9;cis&#xE9;e par la seconde op&#xE9;rande.</p>
      </div>
      <div class="content-code">
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #8c8c8c">//&#xA0;64&#xA0;(&#xA0;1&#xA0;0&#xA0;0&#xA0;0&#xA0;0&#xA0;0&#xA0;0)
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">16&#xA0;</span><span style="color: #ffcc00">&lt;&lt;&#xA0;</span><span style="color: #ffffff">2</span><span style="color: #ffcc00">);
<br/></span><span style="color: #8c8c8c">//&#xA0;4&#xA0;(&#xA0;1&#xA0;0&#xA0;0)
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">16&#xA0;</span><span style="color: #ffcc00">&gt;&gt;&#xA0;</span><span style="color: #ffffff">2</span><span style="color: #ffcc00">);</span>
</span>
</code>
      </div>
      <h3 id="c_02_conditionnel">Conditionnel, relationnel et priorit&#xE9;</h3>
      <div class="content-box">
        <h4>Conditionnel ternaire</h4>
        <p>L'op&#xE9;rateur ternaire est pratique pour v&#xE9;rifier une condition avant affectation mais pour ce faire il utilise trois op&#xE9;randes. Le ? interroge la premi&#xE8;re op&#xE9;rande, si sa valeur peut &#xEA;tre convertie en true alors la seconde op&#xE9;rande sera utilis&#xE9;e, sinon ce sera la troisi&#xE8;me op&#xE9;rande.</p>
      </div>
      <div class="content-syntaxe">
        <em>var variable = operande1 ? operande2 : operande3;</em>
      </div>
      <div class="content-code">
        <strong>Conditionnel ternaire</strong>
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #8c8c8c">//&#xA0;[]
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(!</span><span style="color: #ffffff">length&#xA0;</span><span style="color: #ffcc00">?&#xA0;[]&#xA0;:&#xA0;new&#xA0;Array(</span><span style="color: #ffffff">length</span><span style="color: #ffcc00">));</span>
</span>
</code>
      </div>
      <div class="content-box">
        <h4>Relationnel in</h4>
        <p>In cherche si la premi&#xE8;re op&#xE9;rande est une propri&#xE9;t&#xE9; de la seconde op&#xE9;rande s'il s&#x2019;agit d'un objet, ou cherche l'index fourni par la premi&#xE8;re op&#xE9;rande si la seconde op&#xE9;rande est un tableau et renvoie un boolean, true si est pr&#xE9;sent ou false.</p>
      </div>
      <div class="content-syntaxe">
        <em>var variable = propriete in objet;</em>
      </div>
      <div class="content-code">
        <strong>Relationnel in</strong>
        <code><span style="color: #ffffff">
<span style="color: #ffffff">
</span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #ffffff">0&#xA0;in&#xA0;</span><span style="color: #ffcc00">[</span><span style="color: #2aa198">"element1"</span><span style="color: #ffcc00">]);
<br/></span><span style="color: #8c8c8c">//&#xA0;true
<br/></span><span style="color: #ffffff">console</span><span style="color: #ffcc00">.</span><span style="color: #ffffff">log</span><span style="color: #ffcc00">(</span><span style="color: #2aa198">"prop1"&#xA0;</span><span style="color: #ffffff">in&#xA0;</span><span style="color: #ffcc00">{&#xA0;</span><span style="color: #ffffff">prop1</span><span style="color: #ffcc00">:&#xA0;</span><span style="color: #2aa198">"valeur1"</span><span style="color: #ffcc00">});</span>
</span>
</code>
      </div>
      <div class="content-box">
        <h4>Priorit&#xE9; entre les op&#xE9;rateurs</h4>
        <p>Comme en math&#xE9;matiques, les parenth&#xE8;ses indiquent une priorit&#xE9; de calcul, dans le cas o&#xF9; aucune priorit&#xE9; n'est &#xE9;tablie, l'application des op&#xE9;rateurs s'effectue dans un certain ordre.</p>
      </div>
      <div class="content-tab">
        <table>
          <tr>
            <th>Priorit&#xE9;</th>
            <th>Nom</th>
            <th>Syntaxe</th>
          </tr>
          <tr>
            <td>1</td>
            <td>Membre, appel</td>
            <td>.[]()</td>
          </tr>
          <tr>
            <td>2</td>
            <td>Instance</td>
            <td>new</td>
          </tr>
          <tr>
            <td>3</td>
            <td>N&#xE9;gation, incr&#xE9;mentation</td>
            <td>! ~ - + ++ --</td>
          </tr>
          <tr>
            <td>4</td>
            <td>Multiplication, division, modulo</td>
            <td>* / %</td>
          </tr>
          <tr>
            <td>5</td>
            <td>Addition, soustraction</td>
            <td>+ -</td>
          </tr>
          <tr>
            <td>6</td>
            <td>D&#xE9;calage</td>
            <td>&lt;&lt; &gt;&gt; &gt;&gt;&gt;</td>
          </tr>
          <tr>
            <td>7</td>
            <td>Comparaison taille</td>
            <td>&lt; &lt;= &gt; &gt;=</td>
          </tr>
          <tr>
            <td>8</td>
            <td>Comparaison &#xE9;galit&#xE9;</td>
            <td>== != === !==</td>
          </tr>
          <tr>
            <td>9</td>
            <td>Logique binaire</td>
            <td>&amp;^|</td>
          </tr>
          <tr>
            <td>10</td>
            <td>Logique</td>
            <td>&amp;&amp;||</td>
          </tr>
          <tr>
            <td>11</td>
            <td>Conditionnel</td>
            <td>?:</td>
          </tr>
          <tr>
            <td>12</td>
            <td>Affectation</td>
            <td>= += -= *= /= %= &lt;&lt;= &gt;&gt;= &gt;&gt;&gt;= &amp;= ^= |=</td>
          </tr>
          <tr>
            <td>13</td>
            <td>Virgule</td>
            <td>,</td>
          </tr>
        </table>
      </div>
    </div>
  </body>
</html>